datasource db {
    provider = "postgres"
    url      = env("POSTGRES_URL")
}

generator db {
    provider = "go run github.com/steebchen/prisma-client-go"
}

model Post {
    id        String    @id @default(uuid())
    caption   String
    images    Media[]
    createdAt DateTime  @default(now())
    updatedAt DateTime?
    deleted   Boolean   @default(false)
    User      User      @relation(fields: [userId], references: [id])
    userId    String
    likes     BigInt    @default(0)
    comments  BigInt    @default(0)
    shares    BigInt    @default(0)
}

model Media {
    id    String @id @default(uuid())
    pID   String
    media String
    Post  Post   @relation(fields: [pID], references: [id])
}

model User {
    id        String       @id
    username  String       @unique
    email     String       @unique
    password  String
    name      String?
    pic       String?
    profile   UserProfile? @relation
    posts     Post[]
    activated Boolean      @default(false)
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt

    Token Token[]
}

model UserProfile {
    uID        String  @unique
    user       User    @relation(fields: [uID], references: [id])
    bio        String?
    gender     String?
    postNumber Int     @default(0)
    followers  Int     @default(0)
    following  Int     @default(0)
}

model Token {
    id    String   @id @default(uuid()) // Unique ID for the token
    uID   String
    token String   @unique
    ttl   DateTime
    scope String
    user  User     @relation(fields: [uID], references: [id], onDelete: Cascade)
}
